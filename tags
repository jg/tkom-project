!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
==	lexer.rb	/^  def ==(str)$/;"	f	class:Text
Lexer	lexer.rb	/^class Lexer$/;"	c
Node	parser.rb	/^class Node$/;"	c
Parser	parser.rb	/^class Parser$/;"	c
Text	lexer.rb	/^class Text$/;"	c
argument	parser.rb	/^  def argument$/;"	f	class:Parser
argument_list	parser.rb	/^  def argument_list$/;"	f	class:Parser
back!	lexer.rb	/^  def back!$/;"	f	class:Lexer
content	parser.rb	/^  def content$/;"	f	class:Parser
end?	lexer.rb	/^  def end?$/;"	f	class:Lexer
end?	parser.rb	/^  def end?$/;"	f	class:Parser
end_text_capture	lexer.rb	/^  def end_text_capture$/;"	f	class:Lexer
index	lexer.rb	/^  def index(pattern)$/;"	f	class:Lexer
initialize	lexer.rb	/^  def initialize(text)$/;"	f	class:Lexer
initialize	lexer.rb	/^  def initialize(text)$/;"	f	class:Text
initialize	parser.rb	/^  def initialize(hash)$/;"	f	class:Node
initialize	parser.rb	/^  def initialize(token_list)$/;"	f	class:Parser
next!	lexer.rb	/^  def next!$/;"	f	class:Lexer
next!	parser.rb	/^  def next!$/;"	f	class:Parser
node	parser.rb	/^  def node$/;"	f	class:Parser
nodelist	parser.rb	/^  def nodelist$/;"	f	class:Parser
parse	parser.rb	/^  def parse$/;"	f	class:Parser
peek	lexer.rb	/^  def peek$/;"	f	class:Lexer
peek	parser.rb	/^  def peek$/;"	f	class:Parser
peek1	lexer.rb	/^  def peek1$/;"	f	class:Lexer
remove_whitespace	lexer.rb	/^  def remove_whitespace(s)$/;"	f	class:Lexer
scan_attributes	lexer.rb	/^  def self.scan_attributes(text)$/;"	F	class:Lexer
scan_text	lexer.rb	/^  def scan_text$/;"	f	class:Lexer
scan_xml_declaration	lexer.rb	/^  def scan_xml_declaration$/;"	f	class:Lexer
scan_xml_node	lexer.rb	/^  def scan_xml_node$/;"	f	class:Lexer
skip_until!	lexer.rb	/^  def skip_until!(pattern, cursor_placement = :after)$/;"	f	class:Lexer
tag_end	parser.rb	/^  def tag_end$/;"	f	class:Parser
tag_name	parser.rb	/^  def tag_name$/;"	f	class:Parser
tag_start	parser.rb	/^  def tag_start$/;"	f	class:Parser
take!	parser.rb	/^  def take!$/;"	f	class:Parser
text	parser.rb	/^  def text$/;"	f	class:Parser
to_s	lexer.rb	/^  def to_s$/;"	f	class:Text
to_s	parser.rb	/^  def to_s$/;"	f	class:Node
tokenize	lexer.rb	/^  def tokenize$/;"	f	class:Lexer
xml_document	parser.rb	/^  def xml_document$/;"	f	class:Parser
